{
  "permissions": {
    "allow": [
      "Bash(npm install:*)",
      "Bash(npx prisma:*)",
      "Bash(npm run build:*)",
      "Bash(timeout 10s npm run dev)",
      "Bash(curl:*)",
      "Bash(npm run dev:*)",
      "Bash(lsof:*)",
      "Bash(pkill:*)",
      "Bash(psql:*)",
      "Bash(npx tailwindcss init:*)",
      "Bash(npm start)",
      "Bash(node:*)",
      "Bash(true)",
      "Bash(rm:*)",
      "Bash(rg:*)",
      "Bash(git remote add:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "Bash(pm2 restart:*)",
      "Bash(grep:*)",
      "Bash(touch:*)",
      "Bash(find:*)",
      "Bash(mkdir:*)",
      "Bash(npm uninstall:*)",
      "Bash(PORT=3002 npm start)",
      "Bash(chmod:*)",
      "Bash(npm run:*)",
      "Bash(npx ts-node:*)",
      "Bash(npm test)",
      "Bash(npm test:*)",
      "Bash(env)",
      "Bash(./test-bsg-simple.sh:*)",
      "Bash(ls:*)",
      "Bash(./test-frontend-backend.sh)",
      "Bash(bash:*)",
      "mcp__playwright__browser_navigate",
      "mcp__playwright__browser_install",
      "mcp__playwright__browser_click",
      "mcp__playwright__browser_type",
      "mcp__playwright__browser_wait_for",
      "mcp__playwright__browser_console_messages",
      "mcp__playwright__browser_select_option",
      "mcp__playwright__browser_network_requests",
      "mcp__playwright__browser_snapshot",
      "mcp__playwright__browser_close",
      "Bash(npx playwright install:*)",
      "Bash(npx playwright test:*)",
      "Bash(mv:*)",
      "Bash(PORT=3005 npm start)",
      "mcp__playwright__browser_press_key",
      "Bash(kill:*)",
      "Bash(timeout:*)",
      "Bash(gtimeout:*)",
      "Bash(sed:*)",
      "Bash(cat:*)",
      "Bash(PORT=3002 npm run dev:frontend)",
      "WebFetch(domain:www.atlassian.com)",
      "WebFetch(domain:support.zendesk.com)",
      "WebFetch(domain:design.atlassian.com)",
      "Bash(npx tsc:*)",
      "Bash(diff:*)",
      "Bash(git checkout:*)",
      "Bash(JWT_SECRET='VERY_VERY_VERY_SECRET_KEY' node scripts/test-auth-token.js)",
      "Bash(/dev/null)",
      "Bash(PGPASSWORD= psql -h localhost -U yanrypangouw -d ticketing_system_db -c \"SELECT COUNT(*) as total_count FROM bsg_master_data WHERE data_type = 'branch' AND is_active = true;\")",
      "Bash(PGPASSWORD= psql -h localhost -U yanrypangouw -d ticketing_system_db -c \"SELECT COUNT(*) as total_records FROM bsg_master_data;\")",
      "Bash(PGPASSWORD= psql -h localhost -U yanrypangouw -d ticketing_system_db -c \"SELECT data_type, COUNT(*) as count FROM bsg_master_data WHERE is_active = true GROUP BY data_type ORDER BY data_type;\")",
      "Bash(PGPASSWORD= psql -h localhost -U yanrypangouw -d atm_management_system -c \"\\dt\")",
      "Bash(PGPASSWORD= psql -h localhost -U yanrypangouw -d atm_management_system -c \"SELECT COUNT(*) as total FROM master_cabang WHERE is_active = true;\")",
      "Bash(PGPASSWORD= psql -h localhost -U yanrypangouw -d atm_management_system -c \"SELECT COUNT(*) as total FROM master_terminal WHERE is_active = true;\")",
      "Bash(PGPASSWORD= psql -h localhost -U yanrypangouw -d atm_management_system -c \"SELECT COUNT(*) as total FROM master_bank WHERE is_active = true;\")",
      "Bash(PGPASSWORD= psql -h localhost -U yanrypangouw -d atm_management_system -c \"\\d master_cabang\")",
      "Bash(PGPASSWORD= psql -h localhost -U yanrypangouw -d atm_management_system -c \"\\d master_terminal\")",
      "Bash(PGPASSWORD= psql -h localhost -U yanrypangouw -d atm_management_system -c \"\\d master_bank\")",
      "Bash(PGPASSWORD= psql -h localhost -U yanrypangouw -d ticketing_system_db -c \"SELECT DISTINCT ft.name as field_type, COUNT(*) as usage_count FROM bsg_template_fields btf JOIN bsg_field_types ft ON btf.field_type_id = ft.id WHERE ft.name LIKE '%dropdown%' GROUP BY ft.name ORDER BY usage_count DESC;\")",
      "Bash(PGPASSWORD=:*)",
      "Bash(open http://localhost:3000)",
      "Bash(npx tsx:*)",
      "Bash(git rm:*)",
      "mcp__playwright__browser_take_screenshot",
      "Bash(git pull:*)",
      "Bash(PORT=5173 npm start)",
      "Bash(./run-enhanced-tests.sh:*)",
      "WebFetch(domain:heroicons.com)",
      "Bash(cp:*)",
      "Bash(./create-wsl-deployment.sh:*)",
      "mcp__playwright__browser_resize",
      "Bash(npm ls:*)",
      "Bash(./create-deployment-zip.sh:*)",
      "Bash(git tag:*)",
      "Bash(zip:*)",
      "Bash(gzip:*)",
      "mcp__playwright__browser_file_upload",
      "Bash(pgrep:*)",
      "mcp__playwright__browser_tab_new",
      "mcp__playwright__browser_handle_dialog"
    ],
    "deny": []
  }
}